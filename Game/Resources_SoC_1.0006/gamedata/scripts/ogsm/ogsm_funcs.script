------------------- Библиотека служебных скриптов для OGSM 2.x ----------------

---------------------- Copyright 2007-2008 xStream & DEXXX --------------------

local timers={}
local g_timers={}
local timer_trigger=nil
local dunwather = level.get_weather()
local wfx1 = "p_surge_day_"..tostring(level.get_time_hours())
local wfx2 = "surge_day_"..tostring(level.get_time_hours())

local exclude_level = {
	["l03u_agr_underground"] 	= true,
	["l12u_sarcofag"] 			= true,
	["l04u_labx18"] 			= true,
	["l08u_brainlab"] 			= true,
	["l10u_bunker"] 			= true,
	["l12u_control_monolith"] 	= true,
	["l12_stancia"] 			= true,
	["l12_stancia_2"] 			= true,	
	["l15_collector22"] 		= true
}

function check_exclude_level()
  if exclude_level[level.name()] then
    	return true
  else
	return false
  end
end

-- Старт таймера в реальном времени
function start_timer(name,delay,action)
	if not delay then
		return false
	end
	
	if not action then
		action = ""
	end

	local time = game.time() --time in seconds since 1970
	local a=1
	while db.storage[db.actor:id()].pstor["rt"..a] do
		a=a+1
		if a>100 then 
			return false 
		end
	end

	save_variable("rt"..a, name)
	save_variable("rt"..a.."d", time+delay*10000)
	save_variable("rt"..a.."p", action)
	
	return true
end


-- Старт таймера в игровом времени
function g_start_timer(name,delay_d,delay_h,delay_m,action)
    local time = level.get_time_days()*60*24+level.get_time_hours()*60+level.get_time_minutes()  --time in game minutes
	if delay_d==nil or delay_h==nil or delay_m==nil then
		return false
	end
	
	if action==nil then
		action = ""
	end

	local a=1
	while db.storage[db.actor:id()].pstor["gt"..a] do
		a=a+1
		if a>100 then 
			return false 
		end
	end

	save_variable("gt"..a, name)
	save_variable("gt"..a.."d", time+delay_d*60*24+delay_h*60+delay_m)
	save_variable("gt"..a.."p", action)

	return true
end

-- Проверка таймеров, использует 3 следующие за ним функции для выбора действия
function check_timers()
	local tmp
	for a=1,100,1 do
		tmp=load_variable("rt"..a,nil)
		if tmp~=nil then
			__timer_found(a)	
		end
	end
	
	for a=1,100,1 do
		tmp=load_variable("gt"..a,nil)
		if tmp~=nil then
			__g_timer_found(a)	
		end
	end
end
function __timer_found(idx)
	local time = game.time() --time in seconds since 1970
	local name,params
	if load_variable("rt"..idx.."d", nil)<=time then
		name=load_variable("rt"..idx, nil)
		params=load_variable("rt"..idx.."p", nil)
		del_variable("rt"..idx)
		del_variable("rt"..idx.."d")
		del_variable("rt"..idx.."p")
		__do_timer_action(name,params)
		return true
	end
	return false
end
function __g_timer_found(idx)
    local gtime = level.get_time_days()*60*24+level.get_time_hours()*60+level.get_time_minutes()  --time in game minutes
	local name,params
	if load_variable("gt"..idx.."d", nil)<=gtime then
		name=load_variable("gt"..idx, nil)
		params=load_variable("gt"..idx.."p", nil)
		del_variable("gt"..idx)
		del_variable("gt"..idx.."d")
		del_variable("gt"..idx.."p")
		__do_timer_action(name,params)
		return true
	end
	return false
end
function __do_timer_action(select_string,params_string)

local adactor 		= db.actor
local game_minuts	= nil

if this.load_variable("addon_opt_surge",1) == 1 and adactor ~= nil then -- отложим начало выброса если мы во временной аномалии, либо отключено в настройках

-- Начало алгоритма выброса --
-- 1. Настало время выброса.
  if select_string=="bl1" then
		if ogsm_surge then
		  if not check_exclude_level() then
		    if db.inDistortAnom == 1 then
			  g_start_timer("bl1",0,0,10)
--			  log3("~ db.inDistortAnom = 1")
			else
			  game_minuts	= level.get_time_minutes()
			  if (game_minuts > 1) and (game_minuts < 26) then
			      if sleep_manager and sleep_manager.is_sleep_active() then
  		            sleep_manager.stopper()
		          end
 		        start_timer("bl2",1)
--			    log3("~ game_minuts "..game_minuts.."")
			  else
			    g_start_timer("bl1",0,0,2)
				--log3("! game_minuts "..game_minuts.." +2")
			  end
			end
		  else
			g_start_timer("bl1",0,1,0)
		  end
		else
			g_start_timer("bl1",0,10,0)
		end
  end
  
-- 2. предупреждение, первые визуальные признаки выброса
	if select_string=="bl2" then
		db.Flag2 = 1
-- временно
		dunwather = level.get_weather()
-- временно

--------------
		if sleep_manager.is_sleep_active() then
			level.set_time_factor(TimeFactor() )
			ar_sleep.disable_scheme()
		end
--------------
		save_variable("blt", 1)
		level.set_weather("addon_blow", false)
		level.add_pp_effector ("teleport.ppe", 2009, false)
		local snd_obj = xr_sound.get_safe_sound_object([[ambient\blowout\rnd_horror4]])
		snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
--		rndsnd()
		lwc_timer.Add("ogsm_rs_stimer", "ogsm_funcs.rndsnd()", 12, 0, 0)
		g_start_timer("bl3",0,0,4)
	end

-- 3. Проигрываем промежуточные эффекты, серена
	if select_string=="bl3" then
		wfx1 = "p_surge_day_"..tostring(level.get_time_hours())
		level.set_weather_fx(wfx1, false)
		level.add_pp_effector("vibros_p.ppe", 1974, false)
		local snd_obj = xr_sound.get_safe_sound_object([[anomaly\dezodor]])
		snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
			if this.load_variable("addon_opt_surge_news",1) == 1 and adactor ~= nil then
				amk_utils.send_tip("Сталкеры внимание! выброс вот вот начнется, срочно ищите надежное убежище!", "Новое сообщение: ", 10, 20, "surge", "news")
			end
		g_start_timer("bl4",0,0,4)
	end

-- 4. Спустя 5 минут затишья начинаем выброс
	if select_string=="bl4" then
		xr_sound.set_actor_sound("")
		level.add_cam_effector("camera_effects\\earthquake.anm", 1974, true, "")
		level.add_pp_effector ("vibros.ppe", 1974, false)
		local snd_obj = xr_sound.get_safe_sound_object([[anomaly\blowout]])
		snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
		ogsm_surge.play_sounds()
		db.actor:give_info_portion("addon_ogsm_surge")
		save_variable("pdns", 1)
		
		wfx2 = "surge_day_"..tostring(level.get_time_hours())
		level.set_weather_fx(wfx2, false)
		
		g_start_timer("bl5",0,0,2)
	end

-- 5. Начинаем расколбас
	if select_string=="bl5" then
		save_variable("blt", 2)
		level.remove_cam_effector(1974)
		db.Dead2 = 1
		if db.FlagEsc == 0 then
			local snd_obj = xr_sound.get_safe_sound_object([[actor\pain_3]])
			snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
			level.add_cam_effector("camera_effects\\head_shot.anm", 1975, false, "")
			ogsm_surge.g_R_Vibros:Run()
		end
		g_start_timer("bl6",0,0,2)
	end


-- 6. Выброс близится к концу
	if select_string=="bl6" then
		g_start_timer("bl7",0,0,2)
	end

-- 7. Завершаем выброс, устанавливаем время следующего
	if select_string=="bl7" then
		ogsm_surge.g_R_Vibros:Stop()
		if db.FlagEsc == 0 then
			level.add_cam_effector("camera_effects\\shell_shock.anm", 1974, false, "")
			local snd_obj = xr_sound.get_safe_sound_object([[actor\breath_1]])
			snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
		end
		level.add_pp_effector ("teleport.ppe", 2009, false)
		local snd_obj2 = xr_sound.get_safe_sound_object([[ambient\earthquake]])
		snd_obj2:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)

		level.set_weather(dunwather, true)

		del_variable("blt")

		del_variable("pdns")

		g_start_timer("bl1",0, vars.t_surge+math.random(-4,4), 0)
		db.actor:disable_info_portion("addon_ogsm_surge")
	--	ogsm_surge.spawn_arts()
		db.Dead2 = 0
		db.Flag2 = 0
		ogse_signals.get_mgr():call( "on_after_blowout" )
	end
else

del_variable("blt")
del_variable("pdns")
db.Dead2 = 0
db.Flag2 = 0
db.actor:disable_info_portion("addon_ogsm_surge")
g_start_timer("bl1",0, vars.t_surge+math.random(-4,4), 0)

end

-- Конец алгоритма выброса --

end

function rndsnd()
local adactor 		= db.actor
    local reward_item = math.random(1,2)
    if reward_item == 1 then
	if this.load_variable("addon_opt_surge_info",1) == 1 and adactor ~= nil then
		local snd_obj = xr_sound.get_safe_sound_object([[anomaly\surge_phase_11]])
		snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
	end
	if this.load_variable("addon_opt_surge_news",1) == 1 and adactor ~= nil then
		amk_utils.send_tip("Сталкеры внимание! идет выброс, советую срочно всем подыскать укрытие.", "Новое сообщение: ", 10, 20, "surge", "news")
	end
    end
    if reward_item == 2 then
	if this.load_variable("addon_opt_surge_info",1) == 1 and adactor ~= nil then
		local snd_obj = xr_sound.get_safe_sound_object([[anomaly\surge_phase_22]])
		snd_obj:play_at_pos(db.actor, vector():set(0,0,0), 0, sound_object.s2d)
	end
	if this.load_variable("addon_opt_surge_news",1) == 1 and adactor ~= nil then
		amk_utils.send_tip("Сталкеры внимание! выброс скоро начнется, ищите глубокую нору если жить охото.", "Новое сообщение: ", 10, 20, "surge", "news")
	end
    end
end

-- Записываем переменную
function save_variable(variable_name, value)
	xr_logic.pstor_store(db.actor, variable_name, value)
end

-- Загружаем переменную
function load_variable(variable_name, value_if_not_found)
	return xr_logic.pstor_retrieve(db.actor, variable_name, value_if_not_found)
end

-- Удаляем переменную
function del_variable(variable_name)
	if db.storage[db.actor:id()].pstor[variable_name] then
		db.storage[db.actor:id()].pstor[variable_name] = nil
	end
end

-- Колбэк на апдейт ГГ
function on_actor_update()
	if not timer_trigger then 
		timer_trigger=game.time() 
	end

	if timer_trigger<=game.time() then
		timer_trigger=game.time()+5000	
		check_timers()
	end

	ogsm_surge.update_surge()
end

-- Загружаем все переменные, которые нужно, вызывается загрузке игры автоматически
function on_game_load()
	if db.storage[db.actor:id()].pstor == nil then
		db.storage[db.actor:id()].pstor = {}
	end

	if load_variable("frn",true) then
		g_start_timer("bl1", 0, vars.t_start, 0)
		ogsm_hideout.first_run()
		save_variable("frn",false)
	end

	ogsm_hideout.get_level_hides()
	dunwather = level.get_weather()
	level.set_weather(dunwather,true)
	game.start_tutorial("restore_sun")

end

function set_sun()
local adactor 		= db.actor
if this.load_variable("addon_opt_surge",1) == 1 and adactor ~= nil then

	if load_variable("blt",0) == 1 then
		level.set_weather("surge_stancia")
		db.Flag2 = 1
	elseif load_variable("blt",0) == 2 then
		level.set_weather("surge_stancia")
		db.Flag2 = 1
		db.Dead2 = 1
	else
--	level.set_weather("default",true)
	level.set_weather(dunwather,true)
	end

else
	level.set_weather(dunwather,true)
end
end

----------------------------------------------------------------
-- функции для сохранения настроек в меню

function compress_name(name)
	return name
end

-----------------------------------------------------------------

------------------- Библиотека служебных скриптов для OGSM 2.x ----------------

---------------------- Copyright 2007-2008 xStream & DEXXX --------------------

--[[

If you're going to use the whole of this script or its parts in your own creative 
developments for the S.T.A.L.K.E.R. game, please don't become such a goddamn 
motherfucker like the notorious author of the ABC Mod - Carbrobro. Leave the 
copyrights, note the real author(s) and don't claim others' ideas and their 
realization to be your own ones. It's just simple Modmakers' Ethics. Thank you!

Если вы собираетесь использовать данный скрипт целиком или частично в своих 
разработках по игре S.T.A.L.K.E.R., пожалуйста не опускайтесь до уровня печально 
известного автора ABC мода - Carbrobro. Не удаляйте копирайты, указывайте настоящего 
автора(ов) и не выдавайте чужие идеи и их реализацию за свои. Ведь это элементарная 
этика модостроителей! Спасибо за понимание.

]]--