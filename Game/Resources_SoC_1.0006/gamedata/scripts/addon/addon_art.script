-- наносим хит гг если он возьмет артефакт.
-- если гг поднимит идин из перечисленных ниже артефактов то получит удар.
-- 03.02.2019 адоптация под ogsr
-- 24.10.2019 переработка схемы расчета урона
--[[
 история версий;
 1.1 - урон наносится при взятии любого артефакта, проигрывается хвук и эффект,
		отнимается 3% здоровия
 1.2 - урон наносится только при поднятии указанной секции артефакта,
		проигрываются рандомные звуки,эффекты
		отнимается рандомно 3 - 27% здоровия и 13 - 39% выносливости
 1.3 - отличия от 1.2, при взятии артефакта из рюкзака, тайника, покупки
		урон не наносится.
 1.4 - отличия от 1.3, пределы рандомно наносимых хитов можно выставить в
		таблице для каждого артефакта. Костюм а также его состояние влияют
		на наносимый хит. Добавлено свойство зарядки после удара
		(когда гг возьмет артефакт и он нанесет урон, некоторое время
		этот артефакт будет безопасно (поднимать с земли) после чего
		он снова востановит энергию и сможет нанести удар при взятии(с земли))
 1.5 -  отключил свойство зарядки после удара, тк эта реализация при некоторых
        условиях приводит к переполнению памяти что приводит к большим проблемам.
		отключение закоментированно так ---
--]]


function attach(sm)
	sm:subscribe({signal = "on_take",	fun = this.on_item_take})
end

local art_param								-- загружаем переменные из таблицы
local min_ahit 			= 0					-- минимальный рандомный урон здоровию в процентах   2 (hmin в таблице)
local max_ahit 			= 0					-- максимальный рандомный урон здоровию в процентах  52 (hmax в таблице)
local rand_float 		= 0					-- рандомный урон здоровию
local min_aphit 		= 0					-- минимальный рандомный урон выносливости в процентах   6 (phmin в таблице)
local max_aphit 		= 0					-- максимальный рандомный урон выносливости в процентах  56 (phmax в таблице)
local rand_pfloat 		= 0					-- рандомный урон выносливости
local shock_protect 	= 0					-- коэфицент защиты от удара (в секции)
local float_shokpot		= 0					-- вычисляемый коэфицент защиты от удара в зависимости от состояния комбеза
local flshp_pr			= 0.8				-- какой процент будет использоватся от float_shokpot (80%)
local ahit 				= 0					-- рандомный урон здоровию от артефакта
local ahit_sum			= 0					-- вычисляемый урон здоровию в зависимости от защиты
local aphit 			= 0					-- рандомный урон выносливости от артефакта
local ftime 			= 0					-- время спустя которое арт сможет наносить урон при взятии 15 (htime в таблице)
local tsec 				= 1					-- множитель ftime, если 1 то ftime-секунды, если 60 то ftime-минуты
local timer_float 		= 0					-- формула расчета времяни для таймера
local arts_taked_id 	= {}  				-- таблица [id предмета] = секция

local podnyl_neto={
    ["af_medusa"]               = {hmin = 2, hmax = 24, phmin = 6, phmax = 36, htime = 20},
    ["af_cristall_flower"]		= {hmin = 4, hmax = 32, phmin = 6, phmax = 36, htime = 20},
    ["af_night_star"]			= {hmin = 8, hmax = 52, phmin = 6, phmax = 56, htime = 20},
    ["af_vyvert"]               = {hmin = 4, hmax = 32, phmin = 6, phmax = 36, htime = 20},
    ["af_gravi"]				= {hmin = 6, hmax = 42, phmin = 6, phmax = 46, htime = 20},
    ["af_gold_fish"]			= {hmin = 8, hmax = 52, phmin = 6, phmax = 56, htime = 20},
    ["af_drops"]				= {hmin = 4, hmax = 32, phmin = 6, phmax = 36, htime = 20},
    ["af_fireball"]				= {hmin = 6, hmax = 42, phmin = 6, phmax = 46, htime = 20},
    ["af_cristall"]				= {hmin = 8, hmax = 52, phmin = 6, phmax = 56, htime = 20},
    ["af_blood"]				= {hmin = 4, hmax = 32, phmin = 6, phmax = 36, htime = 20},
    ["af_mincer_meat"]			= {hmin = 6, hmax = 42, phmin = 6, phmax = 46, htime = 20},
    ["af_soul"]					= {hmin = 8, hmax = 52, phmin = 6, phmax = 56, htime = 20},
    ["af_electra_sparkler"]		= {hmin = 4, hmax = 32, phmin = 6, phmax = 36, htime = 20},
    ["af_electra_flash"]		= {hmin = 6, hmax = 42, phmin = 6, phmax = 46, htime = 20},
    ["af_electra_moonlight"]	= {hmin = 8, hmax = 52, phmin = 6, phmax = 56, htime = 20},
    ["af_ameba_slime"]			= {hmin = 4, hmax = 32, phmin = 6, phmax = 36, htime = 20},
    ["af_ameba_slug"]			= {hmin = 6, hmax = 42, phmin = 6, phmax = 46, htime = 20},
    ["af_ameba_mica"]			= {hmin = 8, hmax = 52, phmin = 6, phmax = 56, htime = 20},
    ["af_dummy_spring"]			= {hmin = 4, hmax = 32, phmin = 6, phmax = 36, htime = 20},
    ["af_dummy_dummy"]			= {hmin = 6, hmax = 38, phmin = 6, phmax = 46, htime = 20},
    ["af_dummy_battery"]		= {hmin = 6, hmax = 42, phmin = 6, phmax = 46, htime = 20},
    ["af_dummy_pellicle"]		= {hmin = 8, hmax = 48, phmin = 6, phmax = 56, htime = 20},
    ["af_dummy_glassbeads"]		= {hmin = 8, hmax = 52, phmin = 6, phmax = 56, htime = 20},
    ["af_rusty_thorn"]			= {hmin = 4, hmax = 32, phmin = 6, phmax = 36, htime = 20},
    ["af_rusty_kristall"]		= {hmin = 6, hmax = 42, phmin = 6, phmax = 46, htime = 20},
    ["af_rusty_sea-urchin"]		= {hmin = 8, hmax = 52, phmin = 6, phmax = 56, htime = 20},
    ["af_fuzz_kolobok"]			= {hmin = 6, hmax = 42, phmin = 6, phmax = 46, htime = 20}
}


function reload_arts_ids(sid)
local art_id = 0
art_id = sid
arts_taked_id[art_id] = nil
---ogse.save_var("arts_taked_id", arts_taked_id, "table")
--log3("~ удалили id "..art_id.."")
end

function on_item_take(obj)
local wnd_inventory = level.get_inventory_wnd()  	 -- окно инвинтаря
local wnd_body	 	= level.get_car_body_wnd()   	 -- окно обыска
local wnd_pda 		= level.get_pda_wnd()	     	 -- окно пда
local wnd_talk		= level.get_talk_wnd()       	 -- окно диалога
local wnd_trade 	= level.get_trade_wnd()      	 -- окно торговли
local adactor 		= db.actor
local obj_art 		= podnyl_neto[obj:section()]


if this.load_variable("addon_opt_afhit",1) == 0 and adactor ~= nil then
	return
end

	if wnd_body and wnd_body:IsShown() then
--	log3("! открыто окно обыска")
		return
	end
	if wnd_talk and wnd_talk:IsShown() then
		return
	end
	if wnd_trade and wnd_trade:IsShown() then
		return
	end

   if not obj_art then
	art_param = nil
	rand_float = 0
	min_ahit = 0					
	max_ahit = 0
	rand_pfloat = 0
	min_aphit = 0
    max_aphit = 0
	ftime = 0
	timer_float = 0
   else
	local sect = obj:section()
	local sect_id = obj:id()
    local aname = "art_id"..sect_id
	 if ogse.var_exists("arts_taked_id") then
		arts_taked_id = ogse.load_var("arts_taked_id")
--		log3("загрузили таблицу")
	 end
	 if arts_taked_id[sect_id] then
--	    log3("~ этот арт уже брали")
	    return
	 end
---	arts_taked_id[sect_id] = sect
---	ogse.save_var("arts_taked_id", arts_taked_id, "table")
--	log3("взяли "..sect.."")
--	log3("~ записали id "..sect_id.."")
	level.add_pp_effector("fire_hit.ppe", 2011, false)
	    for k,v in pairs(podnyl_neto) do
			if string.find(sect,k) then
				art_param = v
			end
        end
		if art_param then
			min_ahit = art_param.hmin					
			max_ahit = art_param.hmax
			rand_float = math.random(min_ahit,max_ahit)
			min_aphit = art_param.phmin					
			max_aphit = art_param.phmax
			rand_pfloat = math.random(min_aphit,max_aphit)
			ftime = art_param.htime
			timer_float = ftime * 2 * tsec
---			lwc_timer.Add(aname, "addon_art.reload_arts_ids("..sect_id..")", timer_float, 0, 0)
--			log3("запускаем таймер "..aname.." на "..timer_float.."/2 сек")
			arhit()
		end
   end
end

function arhit()

local outfit 		 = db.actor:item_in_slot(6)		-- получаем обьект в 6 слоте (костюм)
local outfit_sect	 = ""							-- секция костюма
local outfit_cond 	 = 0  							-- состояние костюма
local ltx 		 	 = system_ini()					-- получаем доступ к файлам

  if outfit ~= nil then
    outfit_sect = outfit:section()
	outfit_cond = outfit:condition()
	shock_protect = ReadLine(ltx, "Number", outfit_sect, "shock_protection")
	float_shokpot = ((shock_protect/100)*(outfit_cond*100))*flshp_pr
  else
    outfit_sect = nil
	outfit_cond = 0
    shock_protect = 0
	float_shokpot = 0
  end

ahit = 0 - (rand_float * 0.01)
--log3("! 1 рандомный урон "..ahit.."")
ahit_sum = ahit + float_shokpot
--    log3("! 2 вычисляем хит "..ahit_sum.."")
	if ahit_sum < 0 then
        db.actor.health = ahit_sum
		arhitp()
		rndsnd()
		rndanm()
--		taked_art_drop(obj)
--		log3("! 3 наносим урон")
	end
end

function arhitp()
aphit = 0 - (rand_pfloat * 0.01)
db.actor.power = aphit
--log3("# 4 наносим урон выносливости "..aphit.."")
end

function rndsnd()
    local reward_item = math.random(1,6)
    if reward_item == 1 then
        local snd_obj = xr_sound.get_safe_sound_object([[interface\take\art\hit_1]])
        snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
    end
    if reward_item == 2 then
        local snd_obj = xr_sound.get_safe_sound_object([[interface\take\art\hit_2]])
        snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
    end
    if reward_item == 3 then
        local snd_obj = xr_sound.get_safe_sound_object([[interface\take\art\hit_3]])
        snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
    end
    if reward_item == 4 then
        local snd_obj = xr_sound.get_safe_sound_object([[interface\take\art\hit_4]])
        snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
    end
    if reward_item == 5 then
        local snd_obj = xr_sound.get_safe_sound_object([[interface\take\art\hit_5]])
        snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
    end
    if reward_item == 6 then
        local snd_obj = xr_sound.get_safe_sound_object([[interface\take\art\hit_6]])
        snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
    end
end

function rndanm()
    local reward_item = math.random(1,4)
    if reward_item == 1 then
        level.add_cam_effector("camera_effects\\hit_left.anm", 999, false, "") 
    end
    if reward_item == 2 then
        level.add_cam_effector("camera_effects\\hit_front.anm", 999, false, "") 
    end
    if reward_item == 3 then
        level.add_cam_effector("camera_effects\\hit_back.anm", 999, false, "") 
    end
    if reward_item == 4 then
        level.add_cam_effector("camera_effects\\hit_right.anm", 999, false, "") 
    end
end

--[[
local drop_art = 40
local drop_status = true

function taked_art_drop(obj)
  if drop_status then
    local reward_item = math.random(1,100)
	  if reward_item <= drop_art then
        db.actor:drop_item(obj)
		log3("drop artifact - true")
	  end
  else
  log3("drop artifact - off")
  end	
end
--]]

----------------------------------------------------------------
-- функции для сохранения настроек в меню

function load_variable(variable_name, value_if_not_found)
	local vn=compress_name(variable_name)
	if vn then
		return xr_logic.pstor_retrieve(db.actor, vn, value_if_not_found)
	end
end

function compress_name(name)
	return name
end

-----------------------------------------------------------------