-- KRodin: Этот скрипт периодически проверяет кол-во используемой луаджитом памяти.
-- При достижении определённого значения, пишет в лог предупреждение, что где-то происходит утечка.
-- Особенно актуально для x64 луаджита, т.к. для него, из-за его особенностей,
-- при запуске игры выделяется 128 мб памяти, и соотв. больше этого кол-ва он использовать не сможет, и начнутся разнообразные вылеты.
-- В одном моде встретил настолько дикие утечки, что под впечатлением решил такой скрипт написать.

local enabled = false --Включен ли скрипт?
local MEMORY_WARNING_AFTER = 50000 --Пусть будет 50мб. По моим наблюдениям, скрипты больше этого не потребляли никогда.
local MEMORY_CHECK_INTERVAL = 30000 --Пусть будет раз в 30 секунд, пока.


class "exec_periodic"
function exec_periodic:__init(fun, time)
	self.call_func = fun
	self.time = time
	self.call = level.add_call(self, self.condition, function() end)
end
function exec_periodic:condition()
	self.call_func()
	self.call:set_pause(self.time)
	return false
end


function init()
	if not enabled then return end
	--
	this.exec_periodic(
		function()
			local memuse = collectgarbage("count")
			log3("##[%s] LUAJIT MEMORY USAGE: [%d KB]", script_name():upper(), memuse)
			--[=[if memuse > MEMORY_WARNING_AFTER then --С переходом на LuaJIT 2.1 - не нужно.
				collectgarbage("collect")
				memuse = collectgarbage("count")
				if memuse > MEMORY_WARNING_AFTER then
					log3("!![%s] MEMORY LEAK FOUND! LUAJIT MEMORY USAGE: [%d KB]", script_name():upper(), memuse)
				end
			end]=]
		end,
		MEMORY_CHECK_INTERVAL
	)
end
