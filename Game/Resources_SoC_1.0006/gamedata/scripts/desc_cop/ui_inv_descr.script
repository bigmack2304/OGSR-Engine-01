-- -*- mode: lua; encoding: windows-1251 -*-
local get_string = game.translate_string
local level_object = level.object_by_id
local string_format = string.format
local string_gfind = string.gfind
local string_find = string.find
local table_insert = table.insert

local cell_size = 25  		-- размер иконки в описании свойств предмета
local shift_show_descr = 900  	-- через какое время после наведения курсора будет показано окно, ms

local sys_ini = system_ini()

local reg_callbacks = {
	cell_item_focus 	= "OnItemFocus",
	cell_item_focus_lost 	= "OnItemFocusLost",
	key_press 		= "OnKeyPress",
	mouse_wheel 		= "OnMouseWheel",
	update 			= "OnUpdate"
}

--------------------------------------------------------------------------------------------------------
class "CUIDescriptionWnd" (CUIScriptWnd)

function CUIDescriptionWnd:__init(st) super()
	self.owner = level.main_input_receiver() or st

	self.scrollPos = 0
	self.k_icon = cell_size*kScreen/50
	
	self.itemInFocus = -1
	for k,v in pairs(reg_callbacks) do
		xr_s.subscribe( k, self[v], { self = self } )
	end
	
	self:Init(0, 0, 1024, 768)
	self:SetAutoDelete(true)
	
	self.xml = CScriptXmlInit()
	self.xml:ParseFile("ui_inv_descr.xml")
	
	self.frame = self.xml:InitFrame("description", st)
	
	self.inv_name = self.xml:InitStatic("description:inv_name", self.frame)
	
	self.scroll_v = self.xml:InitScrollView("description:scroll_v", self.frame)
	self.scroll_height = self.scroll_v:GetHeight()
	self.descr = self.xml:InitStatic("description:descr_list", nil)
	
	self.cost = self.xml:InitStatic("description:cost_wnd", self.frame)
	self.weight_static = self.xml:InitStatic("description:weight_wnd", self.frame)
	
	self.cond_frame = self.xml:InitStatic("description:frame_condition", self.frame)
	self.cond_scale = self.xml:InitStatic("description:condition", self.cond_frame)
	local tex_name = self.cond_scale:GetText()
	local cond_texture, cond_rect = get_texture_info(tex_name)
	self.cond_scale:InitTexture(cond_texture)
	self.max_cond_w = self.cond_scale:GetWidth()
	self.cond_rect = cond_rect
	
	self.frame:Show(false)
end

function CUIDescriptionWnd:__finalize()
end

function CUIDescriptionWnd:HideDescription()
	if self.frame:IsShown() then self.frame:Show(false) end
end

function CUIDescriptionWnd:OnMouseWheel(mode)
	if self.frame:IsShown() then
		local n = mode and -40 or 40 
		local mx = self.scroll_v:GetMaxScrollPos()
		if mx > self.scroll_height then mx = mx - self.scroll_height end
		self.scrollPos = math.clamp(self.scrollPos + n, 0, mx)
		self.scroll_v:SetScrollPos(self.scrollPos)
	end
end

function CUIDescriptionWnd:ShowPropFromIni(icon, text)
	local st = self.xml:InitStatic("props_ini", self.scroll_v)

    local w = icon.w*self.k_icon
    local ww = cell_size*2
    st.icon = CUIStatic()
    st:AttachChild(st.icon)
    local tex = "ui\\ui_icon_equipment"..( icon.g~=0 and "_"..icon.g or " ")
    st.icon:InitTexture(tex)
    st.icon:SetOriginalRect(icon.x, icon.y, icon.w, icon.h)
    st.icon:Init((ww-w)/2, 0, w, cell_size)
    st.icon:SetStretchTexture(true)

	ww = ww + 1
	st.text = CUIStatic()
	st:AttachChild(st.text)
	st.text:Init(ww, 0, st:GetWidth()-ww, cell_size)
	st.text:SetTextY((cell_size/2)-8)
	st.text:SetTextST(text)
	st.text:SetTextColor(255, 160, 160 ,160)

	self.addH = self.addH + cell_size + 1
end

function CUIDescriptionWnd:ShowDescription(item)
	if (item==nil) or BlockUIDescr() then return end
	
	self.scroll_v:Clear()
	
	self.item = item
	self.section = item:section()
	self.condition = item:condition()

	local inv_name = news_manager.get_inv_name(self.section)

	self.addH = 0

	local description = get_string(sys_ini:r_string(self.section, "description"))


	-- if game_options.DEBUG then
		-- inv_name = get_string(inv_name).."\\n%c[160,160,160,160]"..self.section
	-- end
	self.inv_name:SetTextST(inv_name)

	self.descr:SetText(description)
	self.descr:AdjustHeightToText()
	self.scroll_v:AddWindow(self.descr, true)
	self.descr:SetAutoDelete(false)
	self.scroll_v:ScrollToBegin()
	self.scrollPos = 0

	if inv_name == "unknown_art" then
		self.cost:SetText("")
	else
		self.cost:SetText(string_format("Средняя цена: %d руб.", item:cost() ) )
	end
	self.weight_static:SetText(string_format("Вес: %.2f кг.", item:get_weight()) )

	if need_show_condition(item) then
		self.cond_scale:SetWidth(self.max_cond_w*self.condition)
		self.cond_scale:SetOriginalRect(
			self.cond_rect.x1,
			self.cond_rect.y1,
			self.cond_rect.x2*self.condition,
			self.cond_rect.y2
		)
		local g = math.min( self.condition*510, 255 )
		local r = math.min( (1-self.condition)*510, 255 )
		self.cond_scale:SetColor( GetARGB(255, r, g, 0) )
		self.cond_scale:SetText(
			string_format("%s: %.1f%%", get_string("ui_st_condition"), self.condition*100)
		)
		self.cond_frame:Show(true)
	else
		self.cond_frame:Show(false)
	end

	local hh = self.descr:GetHeight() + self.addH
	if hh < 678 then
		self.frame:SetHeight(hh + 90)
		self.scroll_work = nil
	else
		self.frame:SetHeight(768)
		self.scroll_work = true
	end

	local cr = self.owner:GetMousePosX()
	if cr>=512 then cr = cr - self.frame:GetWidth()
--------------------позиция окна------------------------
	else cr = cr + 20 end
--------------------------------------------------------
	self.frame:SetWndPos(cr, math.min(self.owner:GetMousePosY(), 768-self.frame:GetHeight()))

	self.frame:Show(true)
end

function CUIDescriptionWnd:Remove()
	for k,v in pairs(reg_callbacks) do
		xr_s.unsubscribe(k, self[v])
	end
	self.shift_tmr = nil
	self.owner = nil
end

function CUIDescriptionWnd:OnItemFocus( item )
--log3("навелись на предмет")
	self.itemInFocus = item:id()
	self.shift_tmr = time_global() + shift_show_descr
end

function CUIDescriptionWnd:OnItemFocusLost( item )
	if self.itemInFocus==item:id() then
		self.itemInFocus = nil
	end
	self:HideDescription()
end

function CUIDescriptionWnd:OnUpdate( delta )
--log3("вызаваем абдейт")
	if self.shift_tmr and self.shift_tmr < time_global() then
		if self.itemInFocus and ( self.itemInFocus > 65535 or alife():object( self.itemInFocus ) ) then
			if self.itemInFocus > 65535 then
				self:ShowDescription( fake_inventory_item.get_item(self.itemInFocus) )
			else
			self:ShowDescription( level_object(self.itemInFocus) )
		end
		end
		self.shift_tmr = nil
	end
end

function CUIDescriptionWnd:OnKeyPress(key, bind)
--log3("вызаваем кнопки")
	if ( key==DIK_keys.MOUSE_1 or key==DIK_keys.MOUSE_2 ) then
		self:HideDescription()
		self.itemInFocus = nil
	end
end
---------------------------------------------------------------------

